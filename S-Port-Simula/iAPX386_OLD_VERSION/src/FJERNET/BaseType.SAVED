package FJERNET;

import java.io.IOException;

import iAPX.minut.AttributeInputStream;
import iAPX.minut.AttributeOutputStream;

/*
 * Usage:
 * 
 * 	int i = NormalDefined.ordinal();
 * 
 * 	TestEnum normalDefined = TestEnum.of(3);

 */
public enum BaseType {
	T_VOID, T_INT, T_REAL, T_LREAL, T_TREAL, T_BOOL, T_CHAR, T_SIZE,
	T_OADDR, T_AADDR, T_GADDR, T_PADDR, T_RADDR, T_NPADR, T_NOINF,
	T_RECTYPE;
	 
	public static int T_max() { return T_RECTYPE.ordinal(); } // Max value of predefined type
	
	
	private static BaseType[] values = BaseType.values(); // Get all enum constants as an array
	public static BaseType of(int ordinale) {
		return values[ordinale];
	}
	
	public void write(BaseType testEnum, AttributeOutputStream oupt) throws IOException {
		oupt.writeShort(testEnum.ordinal());
	}
	public void write(AttributeOutputStream oupt) throws IOException {
		oupt.writeShort(this.ordinal());
	}

	public static BaseType read(AttributeInputStream inpt) throws IOException {
		return BaseType.of(inpt.readShort());
	}
}
